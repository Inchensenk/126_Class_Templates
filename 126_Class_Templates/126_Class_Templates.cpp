// 126_Class_Templates.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы. https://www.youtube.com/watch?v=SDRMUgJwro0
//Шаблоны классов

#include <iostream>
using namespace std;
//STL - стандартная библиотека шаблонов, которая является неотъемлемой частью языка С++ и которая позволяет намного более удобно оперировать с данными.
//Процесс изучения STL очень тесно связан с пониманием таких тем как динамические структуры данных.
//Для того чтобы понимать как работать с STL, потребуется знать как устроены и как работают шаблоны классов.
//По сути, нам нужно использовать шаблоны классов тогда когда мы хотим чтобы наш класс работал с разными типами данных и не нужно было бы писать отдельную реализацию для разных типов данных.
//Тоак же подобные классы называют обобщенными классами.

//Так же как и с функциями, для создания шаблона класса нужно ключевое слово template и ключевое слово typename в скобочках <typename>ю
//С ключевым словом typename есть несколько ньюансов
//ключевое слово template говорит о том, что класс будет шаблонным
//ключевое слово typename говорит о том, что у нас будут использоваться обощенный типы данных
//Буква T это название обобщенного типа данных
//запись template<typename T> значит что в классе будет использоваться какой-то неизвесный тип данных, о том какой это будет тип данных мы узнаем в момент создания такого класса
//вместо T можно написать что угодно, но обычно обощенные типы называют Т и если их колличество больше одного то добавляется цивра(T1, T2 и так далее)
template<typename T>
//В классе описываем какуюто логику которая будет производиться с типом данных T в будующем, не зная какой это будет тип
class MyClass
{
public:
	//конструктор 
	MyClass(T value)
	{
		this->value = value//полю присваиваем значение входящего параметра
	}
	//с помощью ключевого слова sizeof можем реализовать функцию которая будет говорить о том сколько места в памяти занимает одна переменная типа T
	//функция DataTypeSize() будет выводить на консоль информацию о том какое колличество памяти в байтах занимает переменная value типа T
	void DataTypeSize()
	{
		cout << sizeof(value) << endl;
	}
private:
	//переменная value обобщенного типа T 
	T value;
};



int main()
{
    cout << "Hello World!\n";
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
